EXPORT EXCEPTION SampleException

EXPORT TYPE Rec IS RECORD
    x: Number
    y: Number
    name: String
END RECORD

EXPORT DECLARE EXTENSION CONSTANT constNumber: Number
%EXPORT DECLARE EXTENSION VAR varNumber: Number

EXPORT DECLARE EXTENSION FUNCTION funcNothing()
EXPORT DECLARE EXTENSION FUNCTION funcBoolean(): Boolean
EXPORT DECLARE EXTENSION FUNCTION funcNumber(): Number
EXPORT DECLARE EXTENSION FUNCTION funcString(): String
EXPORT DECLARE EXTENSION FUNCTION funcBytes(): Bytes
EXPORT DECLARE EXTENSION FUNCTION funcArray(): Array<Number>
EXPORT DECLARE EXTENSION FUNCTION funcDictionary(): Dictionary<Number>
EXPORT DECLARE EXTENSION FUNCTION funcRecord(): Rec

EXPORT DECLARE EXTENSION FUNCTION funcInBoolean(n: Boolean): Boolean
EXPORT DECLARE EXTENSION FUNCTION funcInNumber(n: Number): Number
EXPORT DECLARE EXTENSION FUNCTION funcInString(n: String): String
EXPORT DECLARE EXTENSION FUNCTION funcInBytes(n: Bytes): Bytes

EXPORT DECLARE EXTENSION FUNCTION funcNumberAdd(x, y: Number): Number

EXPORT DECLARE EXTENSION FUNCTION funcNumberOut(OUT x: Number)
EXPORT DECLARE EXTENSION FUNCTION funcNumberOut2(OUT x: Number, OUT y: Number)

EXPORT DECLARE EXTENSION FUNCTION setVarNumber(n: Number)
EXPORT DECLARE EXTENSION FUNCTION raiseException()
