%|
    File: bitwise

    Bitwise binary logical operations on 32-bit words.
|%

%|
    Function: and

    Bitwise logical "and" of two 32-bit words.

    For each bit in the inputs, the following truth table
    determines the output bit:

    >    | 0 | 1 | <- x
    > ---+---+---+
    >  0 | 0 | 0 |
    > ---+---+---+
    >  1 | 0 | 1 |
    > ---+---+---+
    >  ^
    >  y
|%
DECLARE NATIVE FUNCTION and(x, y: Number): Number

%|
    Function: extract

    Extract a range of bits from a 32-bit word.

    Parameters:
        x - number to extract bits from
        n - bit position of the lowest order bit to extract
        w - width of bit range to extract

    Description:
        This function extracts a given range of bits. The bits
        in an word are numbered starting at 0 for the least
        significant bit.

        The function call

        > bitwise.extract(x, 5, 3)

        will extract the following bits from the word

        > 31    28      24      20      16      12       8       4       0
        > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        > | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
        > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        >                                                 |     |
        >                                                 +-----+
|%
DECLARE NATIVE FUNCTION extract(x, n, w: Number): Number

%|
    Function: get

    Get a specific bit from a 32-bit word.

    Parameters:
        x - number to extract the bit from
        n - bit position of the bit to extract

    Description:
        This function returns a Boolean value indicting whether
        the indicated bit is set (TRUE) or not (FALSE).
|%
DECLARE NATIVE FUNCTION get(x, n: Number): Boolean

%|
    Function: not

    Invert all bits in a 32-bit word.
|%
DECLARE NATIVE FUNCTION not(x: Number): Number

%|
    Function: or

    Bitwise logical "or" of two 32-bit words.

    For each bit in the inputs, the following truth table
    determines the output bit:

    >    | 0 | 1 | <- x
    > ---+---+---+
    >  0 | 0 | 1 |
    > ---+---+---+
    >  1 | 1 | 1 |
    > ---+---+---+
    >  ^
    >  y
|%
DECLARE NATIVE FUNCTION or(x, y: Number): Number

%|
    Function: replace

    Replace a range of bits in a 32-bit word.

    Parameters:
        x - number to replace bits into
        n - bit position of the lowest order bit to replace
        w - width of bit range to replace
        y - new bits to replace

    Description:
        This function replaces a given range of bits with new bits.
        The bits in an word are numbered starting at 0 for the least
        significant bit.

        The function call

        > bitwise.replace(x, 5, 3, 7)

        will replace the following bits in the word

        > 31    28      24      20      16      12       8       4       0
        > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        > | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
        > +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        >                                                 |     |
        >                                                 +-----+

        Each of the bits numbered 5, 6, and 7 would be set to 1 (from the
        input value 7).
|%
DECLARE NATIVE FUNCTION replace(x, n, w, y: Number): Number

%|
    Function: set

    Set a specific bit in a 32-bit word.

    Parameters:
        x - number to set the bit
        n - bit position of the bit to set
        v - bit value to set, 0 (FALSE) or 1 (TRUE)

    Description:
        This function returns a new value with the given bit
        set according to the parameter v.
|%
DECLARE NATIVE FUNCTION set(x, n: Number, v: Boolean): Number

%|
    Function: shift_left

    Shift a 32-bit word left by a given number of bits.

    Parameters:
        x - word to shift
        n - number of bits to shift left

    Description:
        New bits shifted into the right hand side of the word are 0.
|%
DECLARE NATIVE FUNCTION shift_left(x, n: Number): Number

%|
    Function: shift_right

    Shift a 32-bit word right by a given number of bits.

    Parameters:
        x - word to shift
        n - number of bits to shift right

    Description:
        New bits shifted into the left hand side of the word are 0.
|%
DECLARE NATIVE FUNCTION shift_right(x, n: Number): Number

%|
    Function: shift_right_signed

    Shift a 32-bit word right by a given number of bits, preserving the sign bit.

    Parameters:
        x - word to shift
        n - number of bits to shift right

    Description:
        New bits shifted into the left hand side of the word are the same as the original leftmost bit.
|%
DECLARE NATIVE FUNCTION shift_right_signed(x, n: Number): Number

%|
    Function: xor

    Bitwise logical "exclusive-or" of two 32-bit words.

    For each bit in the inputs, the following truth table
    determines the output bit:

    >    | 0 | 1 | <- x
    > ---+---+---+
    >  0 | 0 | 1 |
    > ---+---+---+
    >  1 | 1 | 0 |
    > ---+---+---+
    >  ^
    >  y
|%
DECLARE NATIVE FUNCTION xor(x, y: Number): Number
