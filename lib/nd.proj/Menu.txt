Format: 1.52


Title: Neon
SubTitle: Standard Library

# You can add a footer to your documentation like this:
# Footer: [text]
# If you want to add a copyright notice, this would be the place to do it.
Timestamp: Generated on day month, year
#   m     - One or two digit month.  January is "1"
#   mm    - Always two digit month.  January is "01"
#   mon   - Short month word.  January is "Jan"
#   month - Long month word.  January is "January"
#   d     - One or two digit day.  1 is "1"
#   dd    - Always two digit day.  1 is "01"
#   day   - Day with letter extension.  1 is "1st"
#   yy    - Two digit year.  2006 is "06"
#   yyyy  - Four digit year.  2006 is "2006"
#   year  - Four digit year.  2006 is "2006"


# --------------------------------------------------------------------------
# 
# Cut and paste the lines below to change the order in which your files
# appear on the menu.  Don't worry about adding or removing files, Natural
# Docs will take care of that.
# 
# You can further organize the menu by grouping the entries.  Add a
# "Group: [name] {" line to start a group, and add a "}" to end it.
# 
# You can add text and web links to the menu by adding "Text: [text]" and
# "Link: [name] ([URL])" lines, respectively.
# 
# The formatting and comments are auto-generated, so don't worry about
# neatness when editing the file.  Natural Docs will clean it up the next
# time it is run.  When working with groups, just deal with the braces and
# forget about the indentation and comments.
# 
# --------------------------------------------------------------------------


File: global  (global.neon)
File: binary  (binary.neon)
File: cformat  (cformat.neon)
File: complex  (complex.neon)
File: console  (console.neon)
File: datetime  (datetime.neon)
File: debugger  (debugger.neon)
File: encoding  (encoding.neon)
File: file  (file.neon)
File: io  (io.neon)
File: json  (json.neon)
File: math  (math.neon)
File: mmap  (mmap.neon)
File: multiarray  (multiarray.neon)
File: net  (net.neon)
File: os  (os.neon)
File: posix  (posix.neon)
File: random  (random.neon)
File: runtime  (runtime.neon)
File: simplehttp  (simplehttp.neon)
File: sqlite  (sqlite.neon)
File: string  (string.neon)
File: struct  (struct.neon)
File: sys  (sys.neon)
File: textio  (textio.neon)
File: time  (time.neon)
File: xml  (xml.neon)

Group: Aspell  {

   Group: Auto  {

      File: $master_data  (aspell\external\aspell-0.60.8\auto\mk-src.pl)
      File: mk-doc.pl  (aspell\external\aspell-0.60.8\auto\mk-doc.pl)

      Group: MkSrc  {

         File: CcHelper  (aspell\external\aspell-0.60.8\auto\MkSrc\CcHelper.pm)
         File: Create  (aspell\external\aspell-0.60.8\auto\MkSrc\Create.pm)
         File: Info  (aspell\external\aspell-0.60.8\auto\MkSrc\Info.pm)
         File: Methods  (aspell\external\aspell-0.60.8\auto\MkSrc\Methods.pm)
         File: ProcCc  (aspell\external\aspell-0.60.8\auto\MkSrc\ProcCc.pm)
         File: ProcCxx  (aspell\external\aspell-0.60.8\auto\MkSrc\ProcCxx.pm)
         File: ProcImpl  (aspell\external\aspell-0.60.8\auto\MkSrc\ProcImpl.pm)
         File: ProcNative  (aspell\external\aspell-0.60.8\auto\MkSrc\ProcNative.pm)
         File: ProcNativeImpl  (aspell\external\aspell-0.60.8\auto\MkSrc\ProcNativeImpl.pm)
         File: Read  (aspell\external\aspell-0.60.8\auto\MkSrc\Read.pm)
         File: Type  (aspell\external\aspell-0.60.8\auto\MkSrc\Type.pm)
         File: Util  (aspell\external\aspell-0.60.8\auto\MkSrc\Util.pm)
         }  # Group: MkSrc

      }  # Group: Auto

   Group: Gen  {

      File: def  (aspell\external\aspell-0.60.8\gen\mk-dirs_h.pl)
      File: prep_str  (aspell\external\aspell-0.60.8\gen\mk-filter-pot.pl)
      File: prep_str  (aspell\external\aspell-0.60.8\gen\mk-static-filter.pl)
      }  # Group: Gen

   File: lock.hpp  (aspell\external\aspell-0.60.8\common\lock.hpp)

   Group: Test  {

      File: filter-test  (aspell\external\aspell-0.60.8\test\filter-test)
      File: misc\commonmark-proc  (aspell\external\aspell-0.60.8\test\misc\commonmark-proc)
      File: suggest\comp  (aspell\external\aspell-0.60.8\test\suggest\comp)
      File: suggest\mkmk  (aspell\external\aspell-0.60.8\test\suggest\mkmk)
      File: suggest\run-batch  (aspell\external\aspell-0.60.8\test\suggest\run-batch)
      }  # Group: Test

   }  # Group: Aspell

Group: Index  {

   Class Index: Classes
   Constant Index: Constants
   Index: Everything
   Exception Index: Exceptions
   File Index: Files
   Function Index: Functions
   Type Index: Types
   Variable Index: Variables
   }  # Group: Index

