%|
    File: cformat

    Provide printf-like formatting similar to the C standard library.
|%

EXPORT printf
EXPORT sprintf

IMPORT variant.Variant

%|
    Function: sprintf

    Given a format string and an array of parameters, format the
    string and return the result.

    Parameters:
        fmt - the format string
        value - the array of <Variant> values to format

    Description:
        The available formatting codes are

            %d - decimal number
            %s - string

    Exceptions:
        - <TypeMismatch> - if the wrong type is supplied for a parameter

    See Also:
        <printf>
|%
FUNCTION sprintf(fmt: String, value: Array<Variant>): String
    % TODO: This needs a lot more functionality, it is intended
    % as a functional equivalent to the C sprintf function.
    VAR r: String
    VAR a: Number := 0
    VAR i: Number := 0
    WHILE i < fmt.length() DO
        IF fmt[i] = "%" THEN
            inc(i)
            CASE fmt[i]
                WHEN "d" DO
                    r.append(value[a].get_number().to_string())
                    inc(a)
                WHEN "s" DO
                    r.append(value[a].get_string())
                    inc(a)
            END CASE
        ELSE
            r.append(fmt[i])
        END IF
        inc(i)
    END WHILE
    RETURN r
END FUNCTION

%|
    Function: printf

    Given a format string and an array of parameters, format the
    string and print the result.

    Parameters:
        fmt - the format string
        value - the array of <Variant> values to format

    Exceptions:
        - <TypeMismatch> - if the wrong type is supplied for a parameter

    See Also:
        <sprintf>
|%
FUNCTION printf(fmt: String, value: Array<Variant>)
    print(sprintf(fmt, value))
END FUNCTION
