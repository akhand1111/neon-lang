IMPORT runtime

TYPE Node := RECORD
    next: POINTER TO Node
    value: Number
END RECORD

FUNCTION make(next: POINTER TO Node): POINTER TO Node
    LET n: POINTER TO Node := NEW Node
    n->next := next
    RETURN n
END FUNCTION

VAR a, b: POINTER TO Node

runtime.set_garbage_collection_interval(1)

% Cycle collection, with needing to mark the cycle.
ASSERT runtime.get_allocated_object_count() = 0
a := make(NIL)
ASSERT runtime.get_allocated_object_count() = 1
IF VALID a THEN
    a->next := make(a)
END IF
ASSERT runtime.get_allocated_object_count() = 2
b := NEW Node
ASSERT runtime.get_allocated_object_count() = 3
a := NIL
b := NEW Node
ASSERT runtime.get_allocated_object_count() = 2
