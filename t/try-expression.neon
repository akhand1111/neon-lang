FUNCTION bar(n: Number): Number
    IF n > 0 THEN
        RETURN n
    ELSE
        RAISE InvalidValueException
    END IF
END FUNCTION

FUNCTION foo1(n: Number)
    LET x: Number := (TRY bar(n) EXCEPTION InvalidValueException DO
        print("exception")
        EXIT FUNCTION
    )
    print("ok \(x)")
END FUNCTION

%FUNCTION foo2(n: Number): Number
%    LET x: Number := (TRY bar(n) EXCEPTION InvalidValueException GIVES 0)
%    RETURN x
%END FUNCTION

foo1(5)
%= ok 5
foo1(-1)
%= exception

LET a: Array<Number> := [1]
LET b: Number := (TRY a[1.5] EXCEPTION ArrayIndexException GIVES 9999)
ASSERT b = 9999

%print(str(foo2(5)))
%%= 5
%print(str(foo2(-1)))
%%= 0
