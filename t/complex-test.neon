IMPORT complex

LET a: complex.Complex := complex.make(5, -1)
LET b: complex.Complex := complex.make(3, 2)

print("\(a)")
%= (5, -1)

% Expected results taken from Wolfram Alpha,
% rounded to precision of decimal64 (there are
% some minor differences in the least significant
% digit - this is a gross test of the complex
% library, not a detailed test of decimal64).

print("\(a.acos())")
%= (0.2011950797009106, 2.313220941769529)

print("\(a.abs())")
%= 5.099019513592785

print("\(a.add(b))")
%= (8, 1)

print("\(a.arg())")
%= -0.1973955598498808

print("\(a.asin())")
%= (1.369601247093986, -2.313220941769529)

print("\(a.asinh())")
%= (2.330974653049312, -0.1937931365549322)

print("\(a.atan())")
%= (1.380543138238714, -3.710500127956832e-2)

print("\(a.atanh())")
%= (0.1944261421470022, -1.530881333938778)

print("\(a.cos())")
%= (0.4377136252176747, -1.126928952198137)

print("\(a.cosh())")
%= (40.09580630629883, -62.43984868079962)

print("\(a.div(b))")
%= (1, -1)

print("\(a.exp())")
%= (80.18797208429722, -124.8853671484962)

print("\(a.exp10())")
%= (-66820.15101903132, -74398.0336957493)

print("\(a.inv())")
%= (0.1923076923076923, 3.846153846153846e-2)

print("\(a.log())")
%= (1.629048269010741, -0.1973955598498808)

print("\(a.log10())")
%= (0.7074866739854089, -8.572780239500631e-2)

print("\(a.mul(b))")
%= (17, 7)

print("\(a.pow(b))")
%= (-174.9072200903553, 90.10096978333358)

print("\(a.sin())")
%= (-1.479697478486943, -0.3333601389479931)

print("\(a.sinh())")
%= (40.0921657779984, -62.44551846769654)

print("\(a.sqrt())")
%= (2.24711142509587, -0.2225078803017828)

print("\(a.sub(b))")
%= (2, -3)

print("\(a.square())")
%= (24, -10)

print("\(a.tan())")
%= (-0.1861094776473044, -1.24074798292407)

print("\(a.tanh())")
%= (1.000037783379601, -8.256719834238951e-5)
